# import json
#
# from pydantic import BaseModel
#
#
# class Product(BaseModel):
#     name: str
#     price: float
#     in_stock: bool
#
# product = Product(name="Alice", price=25, in_stock=True)
#
# # üîµ –°–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤ —Ñ–∞–π–ª
# with open("product.json", "w") as file:
#     json.dump(product.model_dump(), file)
#
# # üîµ –î–µ—Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–∑ —Ñ–∞–π–ª–∞
# with open("product.json", "r") as file:
#     product_data = json.load(file)
#     new_product = Product(**product_data)
#     print(new_product)
import allure  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–∞–∫–µ—Ç allure
import pytest


@allure.step("–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ª–æ–∂–µ–Ω–∏—è —á–∏—Å–µ–ª {a} –∏ {b}")
def check_addition(a, b, expected):
    with allure.step(f"–°–ª–æ–∂–µ–Ω–∏–µ {a} –∏ {b}"):
        result = a + b
    with allure.step(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ {result} == {expected}"):
        assert result == expected

def test_addition():
    check_addition(2, 2, 4)
    check_addition(3, 5, 8)